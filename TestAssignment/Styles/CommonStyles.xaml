<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="options">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="HeaderTextBlockStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource TextBlockGray}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TextBlockStyle"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource TextBlockGray}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource TextBlockGray}" />
    </Style>

    <Style x:Key="MetroButton" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />-->
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBlockGray}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Background" Value="#FFE0E0E0" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="#ADADAD" />
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>